# TODO: create graphql schema for cat. Example type definitions:
# Cat: id, cat_name, weight, birthdate, owner, location, filename
# Location: type, coordinates
# Coordinates: lat, lng
# LocationInput: type, coordinates
# Query: catById, cats, catsByArea, catsByOwner
# Mutation: createCat, updateCat, deleteCat

scalar DateTime

type Cat {
  id: ID
  cat_name: String
  weight: Float
  birthdate: DateTime
  owner: User
  location: Point
  filename: String
}

type Point {
  type: GeoJSONPoint
  coordinates: [Float]
}

enum GeoJSONPoint {
  Point
}

input LocationInput {
  type: GeoJSONPoint!
  coordinates: [Float]!
}

type Query {
  catById(id: ID!): Cat
  cats: [Cat]
  catsByArea(topRight: LocationInput!, bottomLeft: LocationInput!): [Cat]
  catsByOwner(ownerId: ID!): [Cat]
}

type Mutation {
  createCat(  
      cat_name: String!, 
      weight: Float!, 
      birthdate: DateTime!, 
      owner: ID!, 
      location: LocationInput!, 
      filename: String!
  ): Cat
  updateCat(
      id: ID!, 
      cat_name: String, 
      weight: Float, 
      birthdate: DateTime,
      owner: ID, 
      location: LocationInput, 
      filename: String
  ): Cat
  deleteCat(id: ID!): Cat
}